<div class="demo-01">
  <div class="demo-canvasbox">
 <canvas id="canvas" width="150" height="150"></canvas>
 <div id="value"></div>
  </div>
 <button onclick="makeRequest()">Launch Request</button>
   <button class="hide" onclick="makeRequest_sec()">Launch Request</button>
</div>  
  <style>
    .demo-canvasbox{
      position: relative;
    }
    #value{
    position: absolute;
    left: 50%;
    top: 48%;
    transform: translate(-50%,-50%);
    font-weight: bold;
    font-size: 18px;
    }
    button{
    border-radius: 5px;
    color: #000;
    font-size: 18px;
    padding: 6px 20px;
    font-weight: bold;
    border: none;
    background: #bcedbc;
    margin-top: 5px;
    }
    .demo-01{
          text-align: center;
    }
    .hide{
      display:none;
    }
  </style>
  <script>
    function makeRequest() {
      var progressBar = document.getElementById('progress');
      var canvas = document.getElementById('canvas');
      var ctx = canvas.getContext('2d');
      var x = canvas.width / 2;
      var y = canvas.height / 2;
      var radius = 60;
      var startAngle = 0;
      var endAngle = 0;
      // https://cdn.shopify.com/videos/c/o/v/bfb46e6e3ab544f8bb5284e670e07e52.mp4
      // https://cdn.shopify.com/s/files/1/0560/0162/6273/files/2_c67442bb-8f7f-4f7e-ab0c-720f20fe5c34.png?v=1688022306
      fetch('https://cdn.shopify.com/videos/c/o/v/bfb46e6e3ab544f8bb5284e670e07e52.mp4').then(response => {
        var reader = response.body.getReader();
        var contentLength = +response.headers.get('content-length');
        var receivedLength = 0;

        function read() {
          reader.read().then(({ done, value }) => {
            if (done) {
              console.log('请求完成');
              return;
            }
            receivedLength += value.length;
            document.getElementById('value').innerText = ((receivedLength / contentLength) * 100).toFixed(2)+"%";
            console.log(receivedLength+"/"+contentLength);
            endAngle = (receivedLength / contentLength) * 2 * Math.PI;
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.beginPath();
            ctx.arc(x, y, radius, startAngle, endAngle);
            ctx.strokeStyle = '#a7fff8'; // 设置描边颜色
            ctx.lineWidth = 3; // 设置线条粗细
            ctx.lineWidth = 10; // 设置线条粗细
            ctx.lineCap = 'round'; // 设置线条末端样式为圆形
            ctx.stroke();
            // startAngle = endAngle;
            read();
          });
        }

        read();
      });
    }
  </script>
  <!-- <script>
    function makeRequest() {
      var xhr = new XMLHttpRequest();

      // 监听进度事件
      xhr.onprogress = function(e) {
        if (e.lengthComputable) {
          var percentComplete = (e.loaded / e.total) * 100;
          document.getElementById('progress').innerText = '进度: ' + percentComplete + '% 完成';
        }
      };

      // 定义请求完成时的处理
      xhr.onload = function() {
        if (xhr.status >= 200 && xhr.status < 300) {
          // 请求成功完成
          var responseData = xhr.responseText;
          // 在这里处理返回的数据
        } else {
          // 请求出错
          console.error('请求出错: ' + xhr.status);
        }
      };

      // 发送请求
      xhr.open('GET', 'your-url', true);
      xhr.send();
    }
  </script> -->


