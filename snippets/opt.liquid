<script>
(function (config) {
  const { product, permanent_domain, shop_id } = config;

  const invalid =
    !product ||
    permanent_domain !== window.location.hostname ||
    shop_id !== window._shop_id;

  if (invalid) {
    {% comment %} console.log('Plugin: 失效，不执行'); {% endcomment %}
    window.in_service = false;
    return;
  }

  window.in_service = true;

  function processPluginScript(node) {
    {% comment %} console.log('检测节点:', node); {% endcomment %}

    if (node.nodeType !== 1) {
      {% comment %} console.log('不是元素节点，跳过'); {% endcomment %}
      return;
    }

    if (node.tagName !== 'SCRIPT') {
      {% comment %} console.log('不是SCRIPT标签，跳过'); {% endcomment %}
      return;
    }

    if (!node.hasAttribute('data-plugin-src')) {
      {% comment %} console.log('没有data-plugin-src属性，跳过'); {% endcomment %}
      return;
    }

    if (node.hasAttribute('data-load')) {
      {% comment %} console.log('已经加载过，跳过'); {% endcomment %}
      return;
    }

    if (node.src && /chrome-extension:\/\//.test(node.src)) {
      {% comment %} console.log('chrome-extension 脚本，跳过'); {% endcomment %}
      return;
    }

    const src = node.getAttribute('data-plugin-src');
    {% comment %} console.log('处理脚本，src=', src); {% endcomment %}
 
    node.removeAttribute('data-plugin-src');
    node.setAttribute('type', 'text/javascript');
    node.setAttribute('data-load', 'true');
    node.src = src;
  }

  // 处理已有 script
  const existingScripts = document.querySelectorAll('script[data-plugin-src]');
  {% comment %} console.log('已有 script 数量:', existingScripts.length); {% endcomment %}
  existingScripts.forEach(processPluginScript);

  // 监听新增 script
  const observer = new MutationObserver((mutations) => {
    mutations.forEach(({ addedNodes }) => {
      addedNodes.forEach(processPluginScript);
    });
  });
  observer.observe(document.documentElement, { childList: true, subtree: true });

})({
  product: true,
  permanent_domain: 'shokz-au.myshopify.com',
  shop_id: 62006427873,
  expires: 0x1996d00e800,
});
</script>
